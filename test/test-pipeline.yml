# This is an
# inline comment.\
# But this is a new line.
#
# And this is a paragraph
# ```yaml
# codeBlock:
#     withIndents: true
# ```
# diagram: pr_build, pre_qa, build, post_qa, provide

parameters:
  - name: paramWithValues
    values:
      - hund
      - katze
      - kuh
  - name: paramWithDisplayName
    displayName: This parameter has a description
  - name: "parameterWithDefault"  # This parameter has a default
    default: "Any string"
    type: string
  - name: "objectParameter"
    type: object
    default:
      vmImage: "Ubuntu-latest"

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildDeploy
        displayName: Build and push into repository
        pool:
          ${{ insert }}: ${{ parameters.agentPool }}
        variables:
          buildPlatform: "Any CPU"
          buildConfiguration: "Release"
          DOCKER_BUILDKIT: 1
          buildVersion: $(version.BUILD_VERSION)
        workspace:
          clean: all
        steps:
          - checkout: self
            clean: true
            fetchTags: true
            fetchDepth: 0

          - bash: |
              echo Using ${{ variables.buildVersion }}
            displayName: Showing version to use

          - ${{ if or(eq(parameters.useSemanticVersion, false), and(not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')), eq(parameters.useSemanticVersion, true))) }}:

            - task: Docker@2
              displayName: Build Docker Image
              env:
                SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              inputs:
                command: "build"
                containerRegistry: ${{ parameters.containerRegistry }}
                repository: ${{ parameters.repository }}
                Dockerfile: ${{ parameters.dockerFile }}
                buildContext: ${{ parameters.buildContext }}
                # Only passed to the "build" step
                ${{ if parameters.buildArgs }}:
                  arguments: ${{ join(' ', parameters.buildArgs) }}
                tags: |
                  $(Build.BuildId)
                  latest
                  ${{ variables.buildVersion }}

            - task: Docker@2
              displayName: Push Docker Image
              env:
                SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              inputs:
                command: push
                containerRegistry: ${{ parameters.containerRegistry }}
                repository: ${{ parameters.repository }}
                Dockerfile: ${{ parameters.dockerFile }}
                buildContext: ${{ parameters.buildContext }}
                tags: |
                  $(Build.BuildId)
                  latest
                  ${{ variables.buildVersion }}    

  - ${{ if eq(parameters.hasHelm, true) }}:
    - stage: helm_push
      condition: and(succeeded(), and(ne('${{ parameters.chartName }}', ''), ne('${{ parameters.chartPath }}', '')))
      dependsOn: [ "Build" ]
      variables:
        - name: buildVersion
          value: $[ stageDependencies.Build.BuildDeploy.outputs['version.BUILD_VERSION'] ]
      jobs:
        - job: Helm push
          displayName: Build and push helm chart
